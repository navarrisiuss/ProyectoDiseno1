@startuml
abstract RegistroReproduccion{
}

enum Lenguajes{
SPANISH
ENGLISH
}



enum Monedas{
USD
CLP
}


enum NombrePlanes{
GRATIS
STANDARD
PREMIUM
}



enum RestriccionEdad{
TODO_PUBLICO
KIDS
ADOLECENTES
ADULTOS
}

interface ConvertidorMonedas{
+convertidorMoneda(): void
}

interface EncriptadorPassword{
+encriptarPassword(): string
}


interface ActualizadorMembresias{
+actualizarAGratis(): Membresia
+actualizarAStardard(String moneda): Membresia
+actualizarAPremium(String moneda): Membresia
}


interface EncriptadorHash{
+encriptarNumTarjeta(): String
+encriptarCodigo(): String
}


interface Busqueda{
+buscarContenido(Catalogo catalogo,String nombre):void
}

interface Cobrar{
+cobrar():void
}

interface InicioSesion{
+inicioSesionValido(String email, String password):void
}

interface GenerarEnlacePublico{
+generarEnlacePublico():void
}

interface Visualizacion{
+ver(Cuenta cuenta):void    
}


class Pago implements ConvertidorMonedas{
-fecha: LocalDate
-monto:double
-moneda: String
-membresia: Membresia
-medioPago: MedioPago
}

class Catalogo extends ContenidoMultimedia{
-contenidoMultimedia:List<ContenidoMultimedia>
+addContenidoMultimedia(ContenidoMultimedia contenidoMultimedia):void
+deleteContenidoMultimedia(ContenidoMultimedia contenidoMultimedia):void
}

class Cuenta implements InicioSesion, EncriptadorPassword, ActualizadorMembresias{
-nombreUsuario: String
-email: String
-password: String
-membresia: Membresia
-perfiles: List<Perfil>
-peliculasCompradas: List<Pelicula>
-registroPagos: List<Pago>
-medioPago: MedioPago
-pagosPeliculas: List<Comprapelicula>
+iniciarSecion(): void
+comprarPelicula(Pelicula pelicula, String moneda): void
+creaPerfil(String nombre, String icono, String lenguaje, boolean isPerfilInfantil): void
+removePerfil(String nombre): void
}



class Membresia {
-plan: Plan
-medioPago: MedioPago
-fechaInicio: LocalDate
-FechaSuiguimientoCobros: LocalDate
-FechaTermino: LocalDate
}


class CompraPelicula implements ConvertidorMonedas{
-pelicula: Pelicula
-fechaCompra: LocalDate
-precio: Double
-moneda: String
-medioPago: MedioPago
}

class Perfil implements Busqueda, Visualizacion{
-nombre: String
-icono: String
-lenguaje: String
-isPerfilDeNinos: Boolean
-listaFavoritos:List<ContenidoMultimedia>
-listaPersonalizada: List<ListaPersonalizada>
-registroContenidoVisto: List<RegistroReproduccion>
-isContenidoInfantil(ContenidoMultimedia contenidoMultimedia): boolean
-buscarContenido(Catalogo catalogo,String nombre):void
+buscarContenido(Catalogo catalogo, String nombre): void
+addListaFavoritos(ContenidoMultimedia contenidoMultimedia):void
+crearListaPersonalizada(String nombre):void
+addAListaPersonalizada(String nombre, ContenidoMultimedia contenidoMultimedia):void
}

class Plan{
-nombre: String
-descripcion: String
-costo: Double
-pantallasActivas: int
-rellenarInfoPlan():void
}

abstract MedioPago implements Cobrar{
}

class CodigoRegalo extends MedioPago{
-codigo: String
-descripcion: String
-fechaExpiracion: LocalDate
}

class PagoTerceros extends MedioPago{
refCliente: String
refProveedor: String
}

Class TarjetaCredito extends MedioPago implements EncriptadorHash{
nombreTitular: String
numeroTarjeta: String
fechaExpiracion: LocalDate
codigoVerificador: String
}

Class TarjetaDebito extends MedioPago implements EncriptadorHash{
-numeroTarjeta: String
-rutTitular: String
-rutBanco: String
}

class Paypal extends MedioPago{
-email: String
-tokenVeridficacion: String
}

class ListaPersonalizada implements GenerarEnlacePublico{
-nombre: String
-listaContenidoMultimedia: List<ContenidoMultimedia>
-enlacePublico: String
+addContenido(ContenidoMultimedia contenidoMultimedia): void
+removeContenido(ContenidoMultimedia contenidoMultimedia): ): void

}

class RegistroReproduccionPelicula extends RegistroReproduccion{
-peliculaVista: Pelicula 
-feachaUltimaVista: LocalDate
-horaUltimaVista: Localtime
}

class RegistroReproduccionSerie extends RegistroReproduccion{
-serieVista: Serie
-episodiosVistos: List<Episodio>
-fechasUltimaVista: List<LocalDate>
-horasUltimaVista: List<LocalTime>
-ultimoEpisodioVisto: Episodio 
}

abstract ContenidoMultimedia implements Visualizacion {
-titulo: String
-descripcion: String
-categorias: List<String>
-fechaLanzamientio: LocalDate
-restriccionEda: String
-estrellas: int

}

class Pelicula extends ContenidoMultimedia{
-director: String
-elenco: List<String>
-isPago:boolean
-costo: double
}

class Temporada{
-numeroTemporada: int
-fechaLanzamiento: LocalDate
-episodios: List<Episodio>
}

class Serie extends ContenidoMultimedia{
-temporadas: List<Temporada>
}

class Episodio{
-numEpisodio: int
-nombre: String
-director: String
-elenco: List<String>
-duracion: LocalTime
-fechaLanzamiento:LocalDate
}

Cuenta -- NombrePlanes
Lenguajes <--- Perfil
Monedas <--- MedioPago
NombrePlanes <--- Plan
RestriccionEdad <--- ContenidoMultimedia
Visualizacion -- Cuenta
Cuenta "1"---"0..*" CompraPelicula
Pago -- Membresia
Cuenta "1"---"o..5" Perfil
Membresia "1"---"1" Plan
Membresia "1"---"1" MedioPago
Perfil "1"---"o..*" RegistroReproduccion
Perfil "1"---"o..*" ListaPersonalizada
Temporada "1"---"1..*" Episodio
RegistroReproduccionPelicula "1"---"1" Pelicula
RegistroReproduccionSerie "1"---"0..*" Episodio
ListaPersonalizada "1"---"0..*" ContenidoMultimedia
Serie "1"---"1..*" Temporada
Cuenta "1"---"1" Membresia
@enduml